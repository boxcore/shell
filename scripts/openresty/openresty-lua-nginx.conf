http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format log_resp_body  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '$request_time $bytes_sent $request_length "$request_body" "$resp_body"';

    access_log  logs/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        access_log  logs/access.index.log  log_resp_body;

        lua_need_request_body on;

        set $resp_body "";

        # ## 有bug的body_filter_by_lua
        # body_filter_by_lua '
        #     local resp_body = string.sub(ngx.arg[1], 1, 1000)
        #     ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
        #     if ngx.arg[2] then
        #         ngx.var.resp_body = ngx.ctx.buffered
        #     end
        # ';
        body_filter_by_lua '
            local maxlen = 1000
            ngx.ctx.buffered = ngx.ctx.buffered or ""
            if #ngx.ctx.buffered < maxlen then
                ngx.ctx.buffered = ngx.ctx.buffered .. string.sub(ngx.arg[1], 1, maxlen - #ngx.ctx.buffered)
            end
            if ngx.arg[2] then
                ngx.var.resp_body = ngx.ctx.buffered
            end
        ';

        location / {
            root   html;
            index  index.html index.htm;
        }

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}